- name: Windows Forensic Collection (ansible-playbook Windows_Forensic_Collection.yaml --extra-vars "ad_kerberos_user=[administrator@SOCTEST1.LOC] ad_kerberos_password=[Password] laps_computer_name=[WIN-2016-M1] laps_hostname=[win-2016-m1.soctest1.loc] debug=true")
  hosts: localhost
  gather_facts: no
  vars:
    laps_username: "[mylocaladmin]"
    domain_name: "[win2012-test.soctest1.loc]"
  tasks:
    - name: Call kinit to retrieve Kerberos token
      ansible.builtin.expect:
        command: kinit {{ ad_kerberos_user }}
        responses:
          (?i)password: "{{ ad_kerberos_password }}"
      no_log: false

    - name: Get the LAPS password using Kerberos auth
      ansible.builtin.set_fact:
        laps_password: "{{ lookup('community.windows.laps_password', laps_computer_name, domain=domain_name) }}"

    - name: Display the retrieved LAPS password (Debug)
      ansible.builtin.debug:
        msg: "The LAPS password is: {{ laps_password }}"
      when: debug is defined and debug | bool

    - name: Copy files from network share to local directory
      community.windows.psexec:
        executable: cmd.exe
        arguments: "/c robocopy \\\\win2012-test.soctest1.loc\\share\\ C:\\temp mytest.bat /r:3 /w:5"
        hostname: "{{ laps_hostname }}"
        connection_username: "{{ laps_username }}"
        connection_password: "{{ laps_password }}"
        encrypt: true
      register: robocopy_result

    - name: Display output of robocopy
      ansible.builtin.debug:
        msg: "{{ robocopy_result.stdout }}"
      when: debug is defined and debug | bool

    - name: Run 'whoami.exe' on the remote host
      community.windows.psexec:
        executable: whoami.exe
        hostname: "{{ laps_hostname }}"
        connection_username: "{{ laps_username }}"
        connection_password: "{{ laps_password }}"
        encrypt: true
      register: psexec_result

    - name: Display the output of the command
      ansible.builtin.debug:
        msg: "{{ psexec_result.stdout }}"
      when: debug is defined and debug | bool
